@{ ViewBag.Title = "Requests"; }

<section class="content-header">
    <h1>
        Requests
    </h1>
    <ol class="breadcrumb">
        <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
        <li><a href="#">Examples</a></li>
        <li class="active">Blank page</li>
    </ol>
</section>
<section class="content">
    <div class="box" id="vue-app">
        <div class="box-header with-border">
            <!--<div class="box-header">
              <i class="fa fa-edit"></i>
              <h3 class="box-title">Actions</h3>
            </div>	-->
            <div>
                <button class="btn btn-default">123</button>
            </div>
        </div>
        <div class="box-body">
            <div id="app">
                {{ message }}
                <div is="grid-template"></div>.
            </div>
            <div id="example-2">
                <simple-counter></simple-counter>
                <simple-counter></simple-counter>
                <simple-counter></simple-counter>
            </div>
            <script type="text/x-template" id="grid-template">
                <div>
                    {{sortKey}}
                    <table class="table table-striped">
                        <thead class="thead-inverse">
                            <tr>                     
                                <table-th thName="Hell Yeah" :fnSortBy="sortBy" thSortKey="1'st Column" :thActiveSortKey="sortKey" :thSortOrder="sortOrder"></table-th>
                                <table-th thName="Second Column" :fnSortBy="sortBy" thSortKey="2'nd Column" :thActiveSortKey="sortKey" :thSortOrder="sortOrder"></table-th>
                                <table-th thName="Third Column" :fnSortBy="sortBy" thSortKey="3'rd Column" :thActiveSortKey="sortKey" :thSortOrder="sortOrder"></table-th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <th>Lecturer</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Reason</th>
                            </tr>
                            <tr>
                                <td>John Doe</td>
                                <td>11-7-2014</td>
                                <td><span class="label label-success">Approved</span></td>
                                <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>
                            </tr>
                            <tr>
                                <td>Alexander Pierce</td>
                                <td>11-7-2014</td>
                                <td><span class="label label-warning">Pending</span></td>
                                <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>
                            </tr>
                            <tr>
                                <td>Mike Doe</td>
                                <td>11-7-2014</td>
                                <td><span class="label label-danger">Denied</span></td>
                                <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            </script>
            <script type="text/x-template" id="header-template">
                <th @@click="sortBy">
                    {{ thName }}
                    @*<i v-bind:class="[ isActive ? 'text-black': 'text-gray', 'text-black']" class="glyphicon glyphicon-sort"></i>*@
                    <i v-bind:class="[ {'text-gray' : !isActive}, glyphicon]"></i>
                </th>
            </script>
        </div>
    </div>
    <div class="nav-tabs-custom">
        <ul class="nav nav-tabs pull-right">
            <li><a href="#tab_3-2" data-toggle="tab">Step 3</a></li>
            <li><a href="#tab_2-2" data-toggle="tab">Step 2</a></li>
            <li><a href="#tab_1-1" data-toggle="tab">Step 1</a></li>
            <li class="active"><a href="#tab_0" data-toggle="tab">Summary</a></li>
            <li class="pull-left header"><i class="fa fa-info-circle"></i>How to apply a <b>Request</b></li>
        </ul>
        <div class="tab-content">
            <div class="tab-pane active text-center" id="tab_0">
                <h3>Request consist of 3 Steps</h3>
                <div class="row">
                    <div class="col-md-4">
                        <h4>Student applies request to chosen lecuturer </h4>
                        <i class="fa fa-cloud-upload" style="font-size: 15em; display:block;"></i>
                        <a href="#tab_1-1" data-toggle="tab" data-walkthrough="#tab_1-1" class="btn btn-lg btn-info"><i class="fa fa-info">More Info</i></a>
                    </div>
                    <div class="col-md-4">
                        <h4>Student applies request to chosen lecuturer </h4>
                        <i class="fa fa-american-sign-language-interpreting" style="font-size: 15em;display:block;"></i>
                        <a href="#tab_2-2" data-toggle="tab" data-walkthrough="#tab_2-2" class="btn btn-lg btn-info"><i class="fa fa-info">More Info</i></a>
                    </div>>
                    <div class="col-md-4">
                        <h4>Student applies request to chosen lecuturer </h4>
                        <i class="fa fa-id-card-o" style="font-size: 15em;display:block;"></i>
                        <a href="#tab_3-2" data-toggle="tab" data-walkthrough="#tab_3-2" class="btn btn-lg btn-info"><i class="fa fa-info">More Info</i></a>
                    </div>
                    &nbsp;
                </div>
            </div>
            <div class="tab-pane" id="tab_1-1">
                <b>How to use:</b>


                <p>
                    Exactly like the original bootstrap tabs except you should use the custom wrapper <code>.nav-tabs-custom</code> to achieve
                    this style.
                </p>
                A wonderful serenity has taken possession of my entire soul, like these sweet mornings of spring which I enjoy with my whole
                heart. I am alone, and feel the charm of existence in this spot, which was created for the bliss of souls like mine.
                I am so happy, my dear friend, so absorbed in the exquisite sense of mere tranquil existence, that I neglect my talents.
                I should be incapable of drawing a single stroke at the present moment; and yet I feel that I never was a greater artist
                than now.
            </div>
            <!-- /.tab-pane -->
            <div class="tab-pane" id="tab_2-2">
                The European languages are members of the same family. Their separate existence is a myth. For science, music, sport, etc,
                Europe uses the same vocabulary. The languages only differ in their grammar, their pronunciation and their most common
                words. Everyone realizes why a new common language would be desirable: one could refuse to pay expensive translators.
                To achieve this, it would be necessary to have uniform grammar, pronunciation and more common words. If several languages
                coalesce, the grammar of the resulting language is more simple and regular than that of the individual languages.
            </div>
            <!-- /.tab-pane -->
            <div class="tab-pane" id="tab_3-2">
                Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy
                text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book.
                It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged.
                It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently
                with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.
            </div>
            <!-- /.tab-pane -->
        </div>
        <!-- /.tab-content -->
    </div>
    <h2>Request History</h2> <a href="@Url.Action(" NewRequest ", "Request ")" class="btn btn-info btn-lg">Compose New Request</a>

    <div class="row">
        <div class="col-xs-12">
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title">Responsive Hover Table</h3>

                    <div class="box-tools">
                        <div class="input-group input-group-sm" style="width: 150px;">
                            <input type="text" name="table_search" class="form-control pull-right" placeholder="Search">

                            <div class="input-group-btn">
                                <button type="submit" class="btn btn-default"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body table-responsive no-padding">
                    <table class="table table-hover">
                        <tbody>
                            <tr>
                                <th>Lecturer</th>
                                <th>Date</th>
                                <th>Status</th>
                                <th>Reason</th>
                            </tr>
                            <tr>
                                <td>John Doe</td>
                                <td>11-7-2014</td>
                                <td><span class="label label-success">Approved</span></td>
                                <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>
                            </tr>
                            <tr>
                                <td>Alexander Pierce</td>
                                <td>11-7-2014</td>
                                <td><span class="label label-warning">Pending</span></td>
                                <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>
                            </tr>
                            <tr>
                                <td>Mike Doe</td>
                                <td>11-7-2014</td>
                                <td><span class="label label-danger">Denied</span></td>
                                <td>Bacon ipsum dolor sit amet salami venison chicken flank fatback doner.</td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <!-- /.box-body -->
            </div>
            <!-- /.box -->
        </div>
    </div>
</section>

@*// Should be moved to JS file!*@ @section scripts{
    @*<script src="~/Scripts/request.js" type="text/javascript"></script>*@
    <script type="text/javascript">
        var elementId = "app";

        var tableTemplate = {
            template: '#grid-template',
            data: function () {
                return {
                    sortKey: "",
                    sortOrder: -1 // i.e. desc
                }
            },
            methods: {
                sortBy: function (key) {
                    if (key === this.sortKey) {
                        //if (this.sortOrder === 1) {
                        this.sortOrder = this.sortOrder * -1;
                        //}
                    }
                    else {
                        this.sortKey = key;
                        this.sortOrder = -1; // i.e. desc
                    }

                    // this should be part of another script file
                    var opts = {
                        lines: 11 // The number of lines to draw
                    , length: 6 // The length of each line
                    , width: 13 // The line thickness
                    , radius: 46 // The radius of the inner circle
                    , scale: 0.75 // Scales overall size of the spinner
                    , corners: 1 // Corner roundness (0..1)
                    , color: '#000' // #rgb or #rrggbb or array of colors
                    , opacity: 0.25 // Opacity of the lines
                    , rotate: 0 // The rotation offset
                    , direction: 1 // 1: clockwise, -1: counterclockwise
                    , speed: 1 // Rounds per second
                    , trail: 36 // Afterglow percentage
                    , fps: 20 // Frames per second when using setTimeout() as a fallback for CSS
                    , zIndex: 2e9 // The z-index (defaults to 2000000000)
                    , className: 'spinner' // The CSS class to assign to the spinner
                    , top: '50%' // Top position relative to parent
                    , left: '50%' // Left position relative to parent
                    , shadow: false // Whether to render a shadow
                    , hwaccel: true // Whether to use hardware acceleration
                    , position: 'absolute' // Element positioning
                    }
                    var target = document.getElementById('app')
                    var spinner = new Spinner(opts).spin(target);

                    setTimeout(function () {
                        spinner.stop();
                    }, 1000);

                    toastr.info('sort by: '+this.sortKey +', ' +(this.sortOrder === -1 ? 'asc' : 'desc'));

                }
            }
        };

        var tableTh = {
            template: '#header-template',
            props: ['thName', 'fnSortBy', 'thSortKey', 'thActiveSortKey', 'thSortOrder'],
            data: function () {
                return {
                    sortKey: ""
                }
            },
            methods: {
                sortBy: function () {
                    this.fnSortBy(this.thSortKey)
                }
            },
            computed: {
                isActive: function () {
                    return this.thActiveSortKey === this.thSortKey;
                },
                glyphicon: function () {

                    if (this.thActiveSortKey !== this.thSortKey) {
                        return 'glyphicon glyphicon-sort';
                    }

                    switch (this.thSortOrder) {
                        case -1: return 'glyphicon glyphicon-sort-by-attributes';
                        case 1: return 'glyphicon glyphicon-sort-by-attributes-alt';
                        default: return 'glyphicon glyphicon-sort';
                    }
                }
            }
        };

        Vue.component('grid-template', tableTemplate);
        Vue.component('table-th', tableTh);

        var app = new Vue({
            el: '#app',
            data: {
                message: "Hello from vue"
            },
        });

        console.log(app);


    </script> }
